name: Run Tests and Publish Allure Report

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-tests:
    name: Run Tests and Generate Allure Report
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Install Dependencies
        run: npm ci

      - name: Set up Android SDK and Emulator
        run: |
          export ANDROID_HOME=$HOME/android-sdk
          export PATH=$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator:$ANDROID_HOME/cmdline-tools/latest/bin:$PATH

          mkdir -p $ANDROID_HOME/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          unzip -o cmdline-tools.zip -d $ANDROID_HOME/cmdline-tools
          mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest

          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --update --verbose
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --verbose "platform-tools" "platforms;android-30" "build-tools;30.0.3" "system-images;android-30;google_apis;x86" "emulator"

          echo "Validando instalação do adb..."
          find $ANDROID_HOME -name adb -type f || { echo "Erro: adb não encontrado."; exit 1; }
          export PATH=$ANDROID_HOME/platform-tools:$PATH
          echo "Verificando versão do adb..."
          adb version || { echo "Erro: adb não acessível."; exit 1; }

          $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n test -k "system-images;android-30;google_apis;x86" --device "pixel_3" --force

          echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
          echo "PATH=$PATH" >> $GITHUB_ENV

      - name: Start Android Emulator
        run: |
          nohup $ANDROID_HOME/emulator/emulator -avd test -no-window -gpu swiftshader_indirect -memory 2048 &
          echo "Esperando o emulador inicializar..."
          sleep 60
          adb devices || { echo "Erro: Nenhum dispositivo detectado pelo adb."; exit 1; }

      - name: Install Allure CLI
        run: |
          sudo apt-get update -y
          sudo apt-get install -y openjdk-11-jdk
          wget -qO- https://github.com/allure-framework/allure2/releases/download/2.22.3/allure-2.22.3.tgz | tar -xz -C /opt/
          echo "export PATH=$PATH:/opt/allure-2.22.3/bin" >> $GITHUB_ENV
          source $GITHUB_ENV
          echo "Verificando instalação do Allure..."
          allure --version || { echo "Erro: Allure não instalado corretamente."; exit 1; }

      - name: Run Tests
        run: npx wdio run wdio.conf.js --spec tests/specs/test.spec.js

      - name: Generate Allure Report
        run: |
          if [ -d "allure-results" ]; then
            allure generate allure-results --clean
          else
            echo "Diretório allure-results não encontrado."
            exit 1
          fi

      - name: Upload Allure Report
        uses: actions/upload-artifact@v3
        with:
          name: allure-report
          path: allure-report

  deploy-report:
    name: Deploy Allure Report to GitHub Pages
    needs: run-tests
    runs-on: ubuntu-latest

    steps:
      # Checkout do repositório
      - name: Checkout Code
        uses: actions/checkout@v3

      # Faz download do relatório gerado
      - name: Download Allure Report
        uses: actions/download-artifact@v3
        with:
          name: allure-report

      # Publica o relatório no GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
